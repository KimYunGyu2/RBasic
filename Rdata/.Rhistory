dim(available.packages())
sessionInfo()
install.packages("stringr")
library(stringr)
search()  # 현재 로드된 패키지 확인인
library("stringr")
remove.packages("stringr")
data()
hist(Nile)
var1
var1
var1 <- 0
var1
var1 <- 1
var1
goods.code <- 'a001'  #  문자값 저장
goods.name <- '냉장고'
age <- 35
name <- "홍길동"
age
name
age <- 35
names <- c("홍길동","이순신","유관순")  #컴바인함수
names
int <- 20
int
string <- "홍길동"
boolean <- TRUE
boolean
sum(10,20,30)
sum(10,20,30,NA)
sum(10,20,30,NA, na.rm=TRUE)
is.character(string)
x <- is.numeric(int)
x
islogical(boolean)
is.logical(boolean)
is.na(x)
x <- c(1,2,"3")
x
result <- x * 3
result <- as.numeric(x) * 3
result
mode(int)
mode(string)
mode(boolean)
gender <- c("man","woman","woman","man","man")
plot(gender)
Ngender <- as.factor(gender)
table(Ngender)
plot(Ngender)
mode(Ngender)
class(Ngender)
is.factor(Ngender)
Ngender
args(factor)
Ogender <- factor(gender.level = c("woman","man"),ordered =T)
Ogender <- factor(gender.levels = c("woman","man"),ordered =T)
Ogender <- factor(gender,levels = c("woman","man"),ordered =T)
Ogender
# 5 기본 함수와 작업 공간
args(max)
max(10,20,NA,30)
example(seq)
example(mean)
getwd()
c(1:20)
1:20
c(1,2,3,4,5)
seq(1,10,2)
rep(1:3,3)
rep(1:3,each=3)
x <- c(1,3,5,7)
y <- c(3,5)
union(x,y)
setdiff(x,y)
intersect(x,y)
v1
v1 <- c(33,-5,20:23, -2:3)
v1
v4 <- c(33,05,20:23,12,"4")
v4
v1:mode(v1):class(v1)
v1;mode(v1);class(v1)
age <- c(30,35,40)
age
names(age) <- c("홍길동","이순신","강감찬") #컬럼명 지정
age
age <- NULL
age
a <- c(1:50)  # 백터 객체 생성
a
a[10:45]
a[19:length(a)-5] #10부터 백터 전체 길이에서 5를 뺀만큼 출력
a[19:length(a)-5] #10부터 백터 전체 길이에서 5를 뺀만큼 출력
a
a[19:(length(a)-5)] #10부터 백터 전체 길이에서 5를 뺀만큼 출력
v1 <- c(13,-5,20:23,12,-2:3)
v1
v1[1]
v1[c(2,4)]
v1[c(3:5)]
v1[c(4,5:8,7)]
v1[-1]
v1[-c(2,4)]
v1[-c(2:5)]
v1[-c(2,5:10,1)]
install.packages("RSADBE")
library("RSADBE")
data(Severity_Counts)
str(Severity_Counts)
Severity_Counts
m <- matrix(c(1:5))
m
m <- matrix(c(1:10), nrow=2)
m
m <- matrix(c(1:11), nrow=2)
m
m <- matrix(c(1:10), nrow=2, byrow=T) # byrow=T 행우선
m
x1 <- c(5,40,50:52)
x2 <- c(30,5,6:8)
mr <- rbind(x1,x2)   # 행묶음으로 matrix 객체 생성
mr
mc <- cbind(x1,x2)  # 열 묶음으로 matrix 객체 생성
mc
m3 <- matrix(10:19,2)
m3
m4 <- matrix(10:20,2)
m4
mode(m3);class(m3)
m3[1,]
m3[,5]
m3[2,3]
m3[1,c(2,5)]
m3[1,c(2:5)]
x <- matrix(c(1:9), nrow=3, ncol=3)
x
length(x)
ncol(x)
x <- matrix(c(1:9), ncol=3, nrow=3)
x
apply(x,1,max) # 1은 행을 나타낸다
apply(x,2,max) # 2는 열을 나타낸다
x * c(1,2,3)
result <- apply(x,1,f)
#사용자 정의 함수
f <- function(x) {
x * c(1,2,3)
}
result <- apply(x,1,f)
result
result <- apply(x,2,f)
result
colnames(x) <- c("one","two","three")
x
vec <- c(1:12)
arr <- array(vec,c(3,2,2))
arr
arr[,,1]
arr[,,2]
mode(arr); class(arr)
library("RSADBE")
data("Bug_Metrics_Software")
str(Bug_Metrics_Software)
dim(Bug_Metrics_Software)
no <- c(1,2,3)
name <- c("hong","lee","kim")
pay <- c(150,250,300)
vemp <- data.frame(No=no,Name=name,Pay=pay) # 칼럼명 지정
vemp
m <- matrix(c(1,"hong",150,
2,"lee",250,
3,"kim",300),3,by=T)
m
memp <- data.frame(m)
memp
memp$X3
str(memp)
summary(memp)
chart_data <- c(305,450,320,460,330,480,380,520)
names(chart_data) <- c("2018 1분기","2019 1분기","2018 2분기","2019 2분기",
"2018 3분기","2019 3분기","2018 4분기","2019 4분기")
str(chart_data)
chart_data
barplot(chart_data,ylim=c(0,600),
col=rainbow(8),
main="2018년도 vs 2019년도 매출현황 비교")
barplot(chart_data)
barplot(chart_data, horiz=T)
data(VADeaths)
VADeaths
str(VADeaths)
dim(VADeaths)
mode(VADeaths)
View(VADeaths)
par(mfrow=c(1,2))
barplot(VADeaths)
dotchart(chart_data)
par(mfrow=c(1,1))
pie(chart_data)
boxplot(VADeaths)
summary(VADeaths)
data(iris)
str(iris)
dim(iris)
head(iris)
tail(iris)
summary(irs$Sepal.Length)
summary(iris$Sepal.Length)
hist(iris$Sepal.Length)
lines(density(iris$Sepal.Length))
hist(iris$Sepal.Width)
x <- seq(2.0,4.5,0.1)
curve(dnorm(x,mean=mean(iris$Sepal.Width),
sd=sd(iris$Sepal.Width)),
clo="blue",add=T)
curve(dnorm(x,mean=mean(iris$Sepal.Width),
sd=sd(iris$Sepal.Width)),
col="blue",add=T)
curve(dnorm(x,mean=mean(iris$Sepal.Width),
sd=sd(iris$Sepal.Width)),
col="blue",add=T)
lines(density(iris$Sepal.Width),col="red")
lines(density(iris$Sepal.Width),col="red")
hist(iris$Sepal.Width, col="mistyrose", freq = F)
lines(density(iris$Sepal.Width),col="red")
x <- seq(2.0,4.5,0.1)
curve(dnorm(x,mean=mean(iris$Sepal.Width),
sd=sd(iris$Sepal.Width)),
col="blue",add=T)
price <- runif(10,min=1,max=100)
plot(price, col="red")
attributes(iris)
pairs(iris[iris$Species=="virginica",1:4])
pairs(iris[iris$Species=="setosa",1:4])
install.packages("scatterplot3d")
library(scatterplot3d)
iris_setosa=iris[iris$Species=='setosa',]
iris_versicolor=iris[iris$Species=='versicolor',]
iris_virginica=iris[iris$Species=='virginica',]
d3 <- scatterplot3d(iris$Petal.Length,
iris$Sepal.Length,
iris$Sepal.Width,
type='n')
d3$points3d(iris_setosa$Petal.Length,
iris_setosa$Sepla.Length,
iris_setosa$Sepal.Width,
bg='orange', pch=21)
d3$points3d(iris_setosa$Petal.Length,
iris_setosa$Sepal.Length,
iris_setosa$Sepal.Width,
bg='orange', pch=21)
d3$points3d(iris_versicolor$Petal.Length,
iris_versicolor$Sepal.Length,
iris_versicolor$Sepal.Width,
bg='blue', pch=23)
d3$points3d(iris_virginica$Petal.Length,
iris_virginica$Sepal.Length,
iris_virginica$Sepal.Width,
bg='green', pch=25)
library(readxl)
setwd("C:/eclipse/RBasic/Rdata")
m_history <- read.excel("Sample2_m_history.xlsx")
m_history <- read_excel("Sample2_m_history.xlsx")
m_history <- read_excel("Sample3_f_history.xlsx")
m_history <- read_excel("Sample2_m_history.xlsx")
f_history <- read_excel("Sample3_f_history.xlsx")
View(m_history)
View(f_history)
data_bindjoin <- bind_rows(m_history, f_history)
library(dplyr)
data_bindjoin <- bind_rows(m_history, f_history)
View(data_bindjoin)
jeju21 <- read_excel("Sample4_y21_history.xlsx")
jeju20 <- read_excel("Sample5_y20_history.xlsx")
data_bindcol <- left_join(jeju21, jeju20, by="ID")
View(data_bindcol)
View(jeju21)
View(jeju20)
View(data_bindcol)
#방법1. 첫번째 테이블을 기준으로 가로로 결합
left_bindcol <- left_join(jeju21, jeju20, by="ID")
View(left_bindcol)
#방법2. 키 변수가 동일할 때만 가로로 결합
innerjoin_bindcol <- inner_join(jeju21, jeju20, by="ID")
View(innerjoin_bindcol)
#방법3. 모두 가로 결합
fulljoin_bindcol <- full_join(jeju21, jeju20, by="ID")
View(fulljoin_bindcol)
exdata1 <- read_excel("Sample1.xlsx")
exdata2 <- exdata1 %>% filter(AGE <= 30 & Y20_CNT >= 10)
View(exdata2)
exdata2 %>% arrange(desc(AGE), Y20_CNT)
full_join(exdata1, exdata2, by="ID")
install.packages("reshape2")
library(reshape2)
head(airquality)
names(airquality) <- tolower(names(airquality))
head(airquality)
str(airquality)
melt_airquality <- melt(airquality)
tail(melt_airquality)
melt_air1 <- melt(airquality)
melt_air2 <- melt(airquality, id.vars=c("month","wind"), measure.vars="ozone")
head(melt_air2)
# iris 데이터셋의 변수명을 모두 소문자로 변경하고 앞6개만 출력하시오
names(iris) <- tolower(names(iris))
head(iris)
# sepal.length 변수가 행이 되도록 구조를 변경하는 코드를 작성하여 species변수를 반환하도록
# 작성하시오
melt_iris <- melt(iris, id.vars="sepal.length", measure.vars="species")
head(melt_iris)
View(melt_iris)
# sepal.length 변수가 행이 되도록 구조를 변경하는 코드를 작성하여 species변수를 반환하도록
# 작성하시오
melt_iris <- melt(iris, id.vars="species", measure.vars="sepal.length")
head(melt_iris)
View(melt_iris)
