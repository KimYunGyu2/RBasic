dim(available.packages())
sessionInfo()
install.packages("stringr")
library(stringr)
search()  # 현재 로드된 패키지 확인인
library("stringr")
remove.packages("stringr")
data()
hist(Nile)
var1
var1
var1 <- 0
var1
var1 <- 1
var1
goods.code <- 'a001'  #  문자값 저장
goods.name <- '냉장고'
age <- 35
name <- "홍길동"
age
name
age <- 35
names <- c("홍길동","이순신","유관순")  #컴바인함수
names
int <- 20
int
string <- "홍길동"
boolean <- TRUE
boolean
sum(10,20,30)
sum(10,20,30,NA)
sum(10,20,30,NA, na.rm=TRUE)
is.character(string)
x <- is.numeric(int)
x
islogical(boolean)
is.logical(boolean)
is.na(x)
x <- c(1,2,"3")
x
result <- x * 3
result <- as.numeric(x) * 3
result
mode(int)
mode(string)
mode(boolean)
gender <- c("man","woman","woman","man","man")
plot(gender)
Ngender <- as.factor(gender)
table(Ngender)
plot(Ngender)
mode(Ngender)
class(Ngender)
is.factor(Ngender)
Ngender
args(factor)
Ogender <- factor(gender.level = c("woman","man"),ordered =T)
Ogender <- factor(gender.levels = c("woman","man"),ordered =T)
Ogender <- factor(gender,levels = c("woman","man"),ordered =T)
Ogender
# 5 기본 함수와 작업 공간
args(max)
max(10,20,NA,30)
example(seq)
example(mean)
getwd()
c(1:20)
1:20
c(1,2,3,4,5)
seq(1,10,2)
rep(1:3,3)
rep(1:3,each=3)
x <- c(1,3,5,7)
y <- c(3,5)
union(x,y)
setdiff(x,y)
intersect(x,y)
v1
v1 <- c(33,-5,20:23, -2:3)
v1
v4 <- c(33,05,20:23,12,"4")
v4
v1:mode(v1):class(v1)
v1;mode(v1);class(v1)
age <- c(30,35,40)
age
names(age) <- c("홍길동","이순신","강감찬") #컬럼명 지정
age
age <- NULL
age
a <- c(1:50)  # 백터 객체 생성
a
a[10:45]
a[19:length(a)-5] #10부터 백터 전체 길이에서 5를 뺀만큼 출력
a[19:length(a)-5] #10부터 백터 전체 길이에서 5를 뺀만큼 출력
a
a[19:(length(a)-5)] #10부터 백터 전체 길이에서 5를 뺀만큼 출력
v1 <- c(13,-5,20:23,12,-2:3)
v1
v1[1]
v1[c(2,4)]
v1[c(3:5)]
v1[c(4,5:8,7)]
v1[-1]
v1[-c(2,4)]
v1[-c(2:5)]
v1[-c(2,5:10,1)]
install.packages("RSADBE")
library("RSADBE")
data(Severity_Counts)
str(Severity_Counts)
Severity_Counts
m <- matrix(c(1:5))
m
m <- matrix(c(1:10), nrow=2)
m
m <- matrix(c(1:11), nrow=2)
m
m <- matrix(c(1:10), nrow=2, byrow=T) # byrow=T 행우선
m
x1 <- c(5,40,50:52)
x2 <- c(30,5,6:8)
mr <- rbind(x1,x2)   # 행묶음으로 matrix 객체 생성
mr
mc <- cbind(x1,x2)  # 열 묶음으로 matrix 객체 생성
mc
m3 <- matrix(10:19,2)
m3
m4 <- matrix(10:20,2)
m4
mode(m3);class(m3)
m3[1,]
m3[,5]
m3[2,3]
m3[1,c(2,5)]
m3[1,c(2:5)]
x <- matrix(c(1:9), nrow=3, ncol=3)
x
length(x)
ncol(x)
x <- matrix(c(1:9), ncol=3, nrow=3)
x
apply(x,1,max) # 1은 행을 나타낸다
apply(x,2,max) # 2는 열을 나타낸다
x * c(1,2,3)
result <- apply(x,1,f)
#사용자 정의 함수
f <- function(x) {
x * c(1,2,3)
}
result <- apply(x,1,f)
result
result <- apply(x,2,f)
result
colnames(x) <- c("one","two","three")
x
vec <- c(1:12)
arr <- array(vec,c(3,2,2))
arr
arr[,,1]
arr[,,2]
mode(arr); class(arr)
library("RSADBE")
data("Bug_Metrics_Software")
str(Bug_Metrics_Software)
dim(Bug_Metrics_Software)
no <- c(1,2,3)
name <- c("hong","lee","kim")
pay <- c(150,250,300)
vemp <- data.frame(No=no,Name=name,Pay=pay) # 칼럼명 지정
vemp
m <- matrix(c(1,"hong",150,
2,"lee",250,
3,"kim",300),3,by=T)
m
memp <- data.frame(m)
memp
memp$X3
str(memp)
summary(memp)
install.packages("stringr")
library(stringr)
str_extract("홍길동35이순신45유관순25","[1-9]{2}")
str_extract_all("홍길동35이순신45유관순25","[1-9]{2}")
num <- scan()
num
sum(num)
name <- scan(whar = character())
홍길동
name <- scan(what = character())
name
df = data.frame()
df = edit(df)
setwd("C:/eclipse/RBasic")
setwd("C:/eclipse/RBasic/Rwork/Part-I")
student <- read.table(file="student.txt")
student
names(student) <- c("번호","이름","키","몸무게")
student
student1 <- read.table(file="student1.txt", header=T)
student1
student1 <- read.table(file.choose(), header=TRUE)
student2 <- read.table(file="student2.txt", sep=";",header=TRUE)
student3 <- read.table(file="student3.txt",header=TRUE, na.strings="-")
student3
student4 <- read.csv(file="student4.txt",sep=",",na.strings = "-")
student4
install.packages("readxl")
library(readxl)
st_excel <- read_excel(path="studentexcel.xlsx",sheet="student")
st_excel
x <- 10
y <- 20
z <- x * y
cat("x * y의 결과는 ",z,"입니다.\n")
cat("x * y = ",z)
print(z)
library(RSADBE)
data(Severity_Counts)
sink("severity.txt")
severity <- Severity_Counts
severity
sink()
st_excel
se.df <- st_excel
write.csv(st.df,"stdf.csv",row.names=F,quote=F)
se.df <- st_excel
write.csv(st.df,"stdf.csv",row.names=F,quote=F)
st.df <- st_excel
write.csv(st.df,"stdf.csv",row.names=F,quote=F)
install.packages("writexl")
library(writexl)
write_xlsx(x=st.df, path="st_excel.xlsx", col_names=TRUE)
score <- scan()
if(score >= 80){
result <- "우수"
}
score
score
score <- scan()
score
result <- "노력"
result <- "우수"
result <- "노력"
if(score >= 80){
result <- "우수"
}
cat("당신의 학점은",result,score)
score <- scan()
ifelse(score >= 80,"우수","노력")
ifelse(score <= 80,"우수","노력")
excel <- read.csv("excel.csv",header=T)
excel
q1 <- excel$q1
q1
ifelse(q1 >= 3, sqrt(q1), q1)
ifelse(q1>=2&q1<=4, q1^2,q1)
# switch() 함수
empname <- scan(what ="")
switch(empname,
hong=250,
lee=350,
kim=200,
kang=400
)
name <- c("kim","lee","choi","park")
which(name=="choi")
no <- c(1:5)
name <- c("홍길동","이순신","강감찬","유관순","김유신")
score <- c(85,78,89,90,74)
exam <- data.frame(학번=no, 이름=name, 성적=score)
exam
which(exam$이름 == "유관순")
exam[4,]
# for
i <- c(1:10)
for(n in i){
print(n*10)
print(n)
}
if(n %% 2 == 0){
print(n)
}
for(n in i){
if(n %% 2 == 0){
print(n)
}
}
i <- c(1:10)
for(n in i){
if(n %% 2 == 0){
next
}else{
print(n)
}
}
name <- c(names(exma))
name <- c(names(exam))
name
for(n in name){
print(n)
}
score <- c(85,95,98)
name <- c("홍길동","이순신","강감찬")
i <- 1
for(s in score) {
cat(name[i]," -> ",s,"\n")
i <- i+1
}
i = 0
while(i<10){
i <- i+1
print(i)
}
